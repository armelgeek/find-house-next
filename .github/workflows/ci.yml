name: Deployment
on:
  push:
    branches:
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "20.x"

      - name: Upload project via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          port: 22
          source: "./"
          target: "/var/www/${{ secrets.SUBDOMAIN }}/client/"
          overwrite: true

      - name: Execute remote commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          port: 22
          script: |
            export SUBDOMAIN=${{ secrets.SUBDOMAIN }}
            export SUBDOMAIN_API=${{ secrets.SUBDOMAIN_API }}
            export DOMAIN=${{ secrets.DOMAIN }}
            export PORT=${{ secrets.PORT }}
            export PORT_API=8055

          
            # Donner la propriété à votre utilisateur
            sudo chown -R $USER:$USER /var/www

            # Ou donner la propriété au serveur web
            sudo chown -R www-data:www-data /var/www

            # Définir les permissions appropriées
            sudo chmod -R 755 /var/www
            
            # Déploiement Directus (via Docker Compose)
            cd /var/www/$SUBDOMAIN/client/database/
            sudo chown -R $USER:www-data /var/www/$SUBDOMAIN/client/database/
            sudo chmod -R 775 /var/www/$SUBDOMAIN/client/database/
            sudo docker compose up -d --build
            

            # Configuration Nginx pour Directus API (création si absent)
            if [ ! -f /etc/nginx/sites-available/$SUBDOMAIN_API.$DOMAIN.conf ]; then
              sudo bash -c "cat > /etc/nginx/sites-available/$SUBDOMAIN_API.$DOMAIN.conf <<EOF
            server {
              listen 80;
              server_name $SUBDOMAIN_API.$DOMAIN;
              location / {
                proxy_pass http://localhost:$PORT_API;
                proxy_set_header Host \$host;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \$scheme;
              }
            }
            EOF"
            fi

            # Activation des sites
            sudo ln -sf /etc/nginx/sites-available/$SUBDOMAIN.$DOMAIN.conf /etc/nginx/sites-enabled/
            sudo ln -sf /etc/nginx/sites-available/$SUBDOMAIN_API.$DOMAIN.conf /etc/nginx/sites-enabled/
            sudo systemctl reload nginx

            # Certificats SSL automatiques (décommentez si nécessaire)
            sudo certbot --nginx -d $SUBDOMAIN.$DOMAIN --non-interactive --agree-tos -m votremail@arvox.dev
            sudo certbot --nginx -d $SUBDOMAIN_API.$DOMAIN --non-interactive --agree-tos -m votremail@arvox.dev
            # Génération du certificat SSL (décommentez pour activer)
            sudo certbot --nginx -d ${{ secrets.SUBDOMAIN }}.${{ secrets.DOMAIN }} --non-interactive --agree-tos -m votremail@arvox.dev
